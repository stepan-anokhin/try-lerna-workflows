name: Merge Sanity
on:
  pull_request:
    types: [closed]
    branches:
      - staging

jobs:
  publish_prerelease:
    name: "Publish 'next' version"
    runs-on: ubuntu-latest
    outputs:
      test-a: ${{ steps.changes.outputs.a }}
      test-b: ${{ steps.changes.outputs.b }}
      test-c: ${{ steps.changes.outputs.c }}
      test-parent: ${{ steps.changes.outputs.parent }}
    steps:
      - name: "Check Merged into Staging"
        uses: actions/github-script@v6
        if: github.event.pull_request.merged == false
        with:
          # See actions/github-script@v6: https://github.com/actions/github-script#actionsgithub-script
          # See compareCommitsWithBasehead: https://octokit.github.io/rest.js/v19#repos-compare-commits-with-basehead
          # See @actions/core: https://github.com/actions/toolkit/tree/main/packages/core#exit-codes
          script: |
            core.setFailed("Feature-branch must be merged into 'staging' before merging into 'master'.");

      - name: "Checkout"
        uses: actions/checkout@v2
        with:
          # This is required to bypass branch protection rules by GitHub actions.
          # See https://stackoverflow.com/a/63733988
          persist-credentials: false
          fetch-depth: 0

      - name: "Setup NPM"
        run: |
          npm ci
          npx lerna bootstrap -- --force-local
          npm set "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}"

      - name: "Version and Publish"
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.CI_TOKEN }}@github.com/$GITHUB_REPOSITORY

          npm run release:staging

      - name: "Select Packages"
        uses: actions/github-script@v6
        id: changes
        with:
          script: |
            // Get changed paths
            const execSync = require('child_process').execSync;
            const changes = execSync('git diff --name-only origin/master', {encoding: 'utf-8'}).split('\n')

            // Set output flags
            core.setOutput('a', changes.includes('packages/a/package.json'));
            core.setOutput('b', changes.includes('packages/b/package.json'));
            core.setOutput('c', changes.includes('packages/c/package.json'));
            core.setOutput('parent', changes.includes('packages/parent/package.json'));

  test-a:
    name: "Test Library A"
    runs-on: ubuntu-latest
    needs: publish_prerelease
    if: needs.publish_prerelease.outputs.test-a == 'true'
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: "Run Tests"
        run: |
          npm ci
          npx lerna bootstrap -- --force-local
          cd packages/a
          npm run test

  test-b:
    name: "Test Library B"
    runs-on: ubuntu-latest
    needs: publish_prerelease
    if: needs.publish_prerelease.outputs.test-b == 'true'
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: "Run Tests"
        run: |
          npm ci
          npx lerna bootstrap -- --force-local
          cd packages/b
          npm run test

  test-c:
    name: "Test Library C"
    runs-on: ubuntu-latest
    needs: publish_prerelease
    if: needs.publish_prerelease.outputs.test-c == 'true'
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: "Run Tests"
        run: |
          npm ci
          npx lerna bootstrap -- --force-local
          cd packages/c
          npm run test

  test-parent:
    name: "Test Parent"
    runs-on: ubuntu-latest
    needs: publish_prerelease
    if: needs.publish_prerelease.outputs.test-parent == 'true'
    steps:
      - name: Functional Test Parent
        run: |
          echo "TESTS ON LIBRARY PARENT"

  confirm-merged-into-staging:
    name: "Confirm Test Results"
    runs-on: ubuntu-latest
    needs: [test-a, test-b, test-c, test-parent]
    if: ${{ always() }}
    steps:
      - name: Check Test Results
        uses: actions/github-script@v6
        with:
          script: |
            const statuses = [
              core.getInput('needs.test-a.status'),
              core.getInput('needs.test-b.status'),
              core.getInput('needs.test-c.status'),
              core.getInput('needs.test-d.status'),
            ];
            console.log(JSON.stringify(statuses, null, 2));
